name: Build Go Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

env:
  CGO_ENABLED: 0
  GOPROXY: https://goproxy.cn,direct

jobs:
  build:
    name: Build Go binaries for macOS and Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Extract version from tag or fallback
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="0.0.0-dev"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version $VERSION"

      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -ldflags "-s -w -X main.Version=${{ steps.version.outputs.version }}" \
            -o dist/pod-proxier-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Compress binaries
        run: |
          cd dist
          for file in *; do
            tar -czf "$file.tar.gz" "$file"
            rm "$file"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*.tar.gz

  release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}